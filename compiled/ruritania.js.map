{"version":3,"sources":["ruritania.coffee"],"names":[],"mappings":"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","file":"ruritania.js","sourceRoot":"/source/","sourcesContent":["{div, span, h1, h2, h3, button, br, p, table, tbody, tr, td} = React.DOM\r\n\r\n# === gameplay config\r\n\r\nLOCATION_NAMES = [\r\n  'New Crobuzon'\r\n  'Gondoshka'\r\n  'El Sobaco'\r\n  'Wuthering Heights'\r\n  'Ingriastadt'\r\n  'Lost-Hope'\r\n  'Naryan Mar'\r\n]\r\n\r\nSIGHT_NAMES = [\r\n  'Cathedral'\r\n  'Eiffel Tower'\r\n  'Eternal Fire'\r\n  'Castle'\r\n  'Taj Mahal'\r\n  'Mosque'\r\n  'Video Arcade'\r\n  'Burial Grounds'\r\n  'Lincoln Memorial'\r\n]\r\n\r\nTRAVEL_CONFIG =\r\n  map_size: 10\r\n  wear_per_day: 10\r\n  selfie_prize: 100\r\n  selfie_wear: 7\r\n  travel_price_multiplier: 20\r\n  travel_wear_multiplier: 10\r\n  sights_per_location: 3\r\n  tick_minutes: 10\r\n  tick_interval: 1 # seconds\r\n  tick_wear: 1\r\n  startingTS: moment(\"2011-10-02T12:30\").unix()\r\n  eat:\r\n    street:\r\n      price: 5\r\n      heal: 10\r\n    junk:\r\n      price: 10\r\n      heal: 30\r\n    restaurant:\r\n      price: 20\r\n      heal: 70\r\n  sleep:\r\n    park:\r\n      price: 0\r\n      heal: 10\r\n      energy: -20\r\n    hostel:\r\n      price: 10\r\n      heal: 20\r\n      energy: 20\r\n    hotel:\r\n      price: 30\r\n      heal: 30\r\n      energy: 50\r\n\r\n\r\n# === utils\r\n\r\ndistance = (c1, c2) ->\r\n  Math.sqrt(Math.pow(c1[0] - c2[0], 2) + Math.pow(c1[1] - c2[1], 2))\r\n\r\n\r\n# === ui\r\n\r\nclass GameUI extends React.Component\r\n\r\n  constructor: (props) ->\r\n    super(props)\r\n    @locations = @genLocations()\r\n\r\n  componentWillMount: ->\r\n    @resetStats()\r\n\r\n  resetStats: ->\r\n    @setState\r\n      currentLocation: @locations[0]\r\n      health: 100\r\n      hunger: 100\r\n      energy: 100\r\n      cash: 1000\r\n      ts: @props.startingTS\r\n\r\n  tick: =>\r\n    @setState (prevState) ->\r\n      energy: prevState.energy - @props.tick_wear\r\n      ts: prevState.ts + moment.duration(@props.tick_minutes, 'minutes').asSeconds()\r\n\r\n  componentDidMount: ->\r\n    @interval = setInterval(@tick, 1000 * @props.tick_interval);\r\n\r\n  componentWillUnmount: ->\r\n    clearInterval(@interval)\r\n\r\n  genLocation: (locName) ->\r\n    name: locName,\r\n    coords: [_.random(0, @props.map_size), _.random(0, @props.map_size)]\r\n    sights: _.sample(SIGHT_NAMES, @props.sights_per_location)\r\n    destinations: []\r\n\r\n  genLocations: ->\r\n    locations = (@genLocation(x) for x in LOCATION_NAMES)\r\n\r\n    for l in locations\r\n      l.destinations = (\r\n        {\r\n        name: x.name\r\n        price: Math.floor(distance(l.coords, x.coords) * @props.travel_price_multiplier)\r\n        wear: Math.floor(distance(l.coords, x.coords) * @props.wear_per_day)\r\n        } for x in locations when l.name isnt x.name\r\n      )\r\n\r\n    locations\r\n\r\n  handleStatsChange: (statsChange) =>\r\n    @setState(\r\n      (prevState) ->\r\n        result = {}\r\n        if prevState.cash < 0 - statsChange.cash\r\n          alert 'not enough cash'\r\n          return false\r\n        for stat, epsilon of statsChange\r\n          newValue = prevState[stat] + epsilon\r\n          if stat in ['health', 'hunger', 'energy']\r\n            if newValue > 100\r\n              newValue = 100\r\n            else if newValue < 0\r\n              newValue = 0\r\n          result[stat] = newValue\r\n        result\r\n    )\r\n\r\n  handleTravel: (destination) =>\r\n    location = _.find @locations, (x) -> x.name == destination.name\r\n    @handleStatsChange\r\n      cash: 0 - destination.price\r\n      energy: 0 - destination.wear\r\n      ts: moment.duration(1, 'day').asSeconds()\r\n    @setState\r\n      currentLocation: location\r\n\r\n  actionButton: (caption, callback, config = {}) ->\r\n    cfg = _.extend({glyph: null, style: 'default'}, config)\r\n    c = if cfg.glyph == null then caption else \"<span class='glyphicon glyphicon-#{cfg.glyph}'></span> #{caption}\"\r\n    p {key: caption},\r\n      button\r\n        className: \"btn btn-#{cfg.style}\"\r\n        dangerouslySetInnerHTML: {__html: c}\r\n        onClick: callback\r\n\r\n  eatButton: (name, type) ->\r\n    @actionButton \"#{name} ($#{@props.eat[type].price})\",\r\n      () => @handleStatsChange\r\n        health: @props.eat[type].heal\r\n        cash: 0 - @props.eat[type].price\r\n      {glyph: 'cutlery'}\r\n\r\n  sleepButton: (name, type) ->\r\n    @actionButton \"#{name} ($#{@props.sleep[type].price})\",\r\n      () => @handleStatsChange\r\n        health: @props.sleep[type].heal\r\n        cash: 0 - @props.sleep[type].price\r\n        energy: @props.sleep[type].energy\r\n        ts: moment.duration(1, 'day').asSeconds()\r\n      {glyph: 'bed'}\r\n\r\n  seeButton: (name) ->\r\n    @actionButton name,\r\n      () => @handleStatsChange\r\n        cash: @props.selfie_prize\r\n        energy: 0 - @props.selfie_wear\r\n        ts: moment.duration(1, 'day').asSeconds()\r\n      {glyph: 'picture'}\r\n\r\n  render: ->\r\n    div {},\r\n      h1 {}, \"Ruritania\"\r\n      div {className: 'row'},\r\n        div {className: 'col-md-8'},\r\n          h2 {style: {marginBottom: 50}}, @state.currentLocation.name\r\n\r\n# = travel ui\r\n          div {className: 'row'},\r\n            div {className: 'col-md-3'},\r\n              h3 {}, 'Eat'\r\n              @eatButton 'Street food', 'street'\r\n              @eatButton 'Junk food', 'junk'\r\n              @eatButton 'In a restaurant', 'restaurant'\r\n            div {className: 'col-md-3'},\r\n              h3 {}, 'Sleep'\r\n              @sleepButton 'In a park', 'park'\r\n              @sleepButton 'In a hostel', 'hostel'\r\n              @sleepButton 'In a hotel', 'hotel'\r\n            div {className: 'col-md-6'},\r\n              h3 {}, 'See'\r\n              _.map @state.currentLocation.sights, (sight) =>\r\n                @seeButton \"The #{sight} of #{@state.currentLocation.name}\"\r\n\r\n          div {className: 'row'},\r\n            table {className: 'table table-hover table-condensed', id: 'travelTable', style: {marginTop: '100px'}},\r\n              tbody {},\r\n                _.map @state.currentLocation.destinations, (dest) =>\r\n                  tr({key: dest.name},\r\n                    td {}, dest.name\r\n                    td {}, \"$#{dest.price}\"\r\n                    td {}, @actionButton 'Travel',\r\n                      () =>\r\n                        @handleTravel dest,\r\n                          {glyph: 'plane'})\r\n\r\n        playerPanel @state\r\n\r\n# ================================\r\n\r\nclass PlayerPanel extends React.Component\r\n\r\n  progressBar: (value, max, style = 'default') ->\r\n    percent = max / 100.0 * value\r\n    div {className: 'progress'},\r\n      div {\r\n        className: \"progress-bar progress-bar-#{style}\"\r\n        style: {width: \"#{percent}%\"}\r\n      }, value\r\n\r\n  render: ->\r\n    div {className: 'col-md-4', id: 'playerPanel'},\r\n      h2 {}, 'Player'\r\n      table {className: 'table'},\r\n        tbody {},\r\n          tr {},\r\n            td {}, 'Health'\r\n            td {}, @progressBar(@props.health, 100, 'success')\r\n          tr {},\r\n            td {}, 'Hunger'\r\n            td {}, @progressBar(@props.hunger, 100, 'danger')\r\n          tr {},\r\n            td {}, 'Energy'\r\n            td {}, @progressBar(@props.energy, 100, 'info')\r\n          tr {},\r\n            td {}, 'Cash'\r\n            td {}, \"$#{@props.cash}\"\r\n          tr {},\r\n            td {}, 'Date'\r\n            td {}, moment(@props.ts * 1000).format('HH:mm MMM Do, YYYY')\r\n\r\nplayerPanel = React.createFactory(PlayerPanel)\r\n\r\n# ================================\r\n\r\n# == Main\r\n\r\nReact.render(\r\n  React.createElement(GameUI, TRAVEL_CONFIG),\r\n  document.getElementById 'content'\r\n)\r\n"]}